.CODE

PUSH simple_heap_init 
CALL
PUSH lmain@@Init
CALL
HALT

simple_heap_init: 
RET 0 ; Retorna inmediatamente

simple_malloc:
LOADFP	; Inicialización unidad
LOADSP
STOREFP ; Finaliza inicialización del RA
LOADHL	; hl
DUP	; hl
PUSH 1	; 1
ADD	; hl+1
STORE 4 ; Guarda el resultado (un puntero a la primer celda de la región de memoria)
LOAD 3	; Carga la cantidad de celdas a alojar (parámetro que debe ser positivo)
ADD
STOREHL ; Mueve el heap limit (hl). Expande el heap
STOREFP
RET 1	; Retorna eliminando el parámetro



.DATA
VT_Init: NOP

.CODE
lmain@@Init:
LOADFP
LOADSP
STOREFP
STOREFP
RET 0

lInit@@:
NOP


.DATA
VT_Object: NOP

.CODE
ldebugPrint@int@Object:
LOADFP
LOADSP
STOREFP
LOAD 3
IPRINT
STOREFP
RET 1

lObject@@:
NOP


.DATA
VT_System: NOP

.CODE
lread@@System:
LOADFP
LOADSP
STOREFP
STOREFP
RET 0

lprintCln@char@System:
LOADFP
LOADSP
STOREFP
STOREFP
RET 1

lprintC@char@System:
LOADFP
LOADSP
STOREFP
STOREFP
RET 1

lprintBln@boolean@System:
LOADFP
LOADSP
STOREFP
STOREFP
RET 1

lprintI@int@System:
LOADFP
LOADSP
STOREFP
STOREFP
RET 1

lprintIln@int@System:
LOADFP
LOADSP
STOREFP
STOREFP
RET 1

lprintSln@String@System:
LOADFP
LOADSP
STOREFP
STOREFP
RET 1

lprintB@boolean@System:
LOADFP
LOADSP
STOREFP
STOREFP
RET 1

lprintS@String@System:
LOADFP
LOADSP
STOREFP
STOREFP
RET 1

lprintln@@System:
LOADFP
LOADSP
STOREFP
STOREFP
RET 0

lSystem@@:
NOP


